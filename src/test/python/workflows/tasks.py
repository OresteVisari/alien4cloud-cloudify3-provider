from utils import set_state_task
from utils import operation_task
from utils import link_tasks


# content of this fn can be generated by workflow plugin (see workflows.py in generated blueprint)
def _build_tasks(ctx, graph, tasks):
    # just paste here the generated code
    set_state_task(ctx, graph, 'LoadBalancerServer', 'deleting', 'LoadBalancerServer_deleting', tasks)
    operation_task(ctx, graph, 'LoadBalancerServer', 'cloudify.interfaces.lifecycle.delete', 'delete_LoadBalancerServer', tasks)
    set_state_task(ctx, graph, 'Tomcat', 'deleted', 'Tomcat_deleted', tasks)
    set_state_task(ctx, graph, 'WebServer', 'deleted', 'WebServer_deleted', tasks)
    set_state_task(ctx, graph, 'War', 'deleting', 'War_deleting', tasks)
    operation_task(ctx, graph, 'LoadBalancerServer', 'cloudify.interfaces.lifecycle.stop', 'stop_LoadBalancerServer', tasks)
    operation_task(ctx, graph, 'WebServer', 'cloudify.interfaces.lifecycle.stop', 'stop_WebServer', tasks)
    set_state_task(ctx, graph, 'ApacheLoadBalancer', 'stopped', 'ApacheLoadBalancer_stopped', tasks)
    set_state_task(ctx, graph, 'ApacheLoadBalancer', 'deleting', 'ApacheLoadBalancer_deleting', tasks)
    operation_task(ctx, graph, 'ApacheLoadBalancer', 'cloudify.interfaces.lifecycle.stop', 'stop_ApacheLoadBalancer', tasks)
    set_state_task(ctx, graph, 'Java', 'deleting', 'Java_deleting', tasks)
    set_state_task(ctx, graph, 'Tomcat', 'stopping', 'Tomcat_stopping', tasks)
    set_state_task(ctx, graph, 'War', 'stopping', 'War_stopping', tasks)
    operation_task(ctx, graph, 'WebServer', 'cloudify.interfaces.lifecycle.delete', 'delete_WebServer', tasks)
    set_state_task(ctx, graph, 'LoadBalancerServer', 'deleted', 'LoadBalancerServer_deleted', tasks)
    set_state_task(ctx, graph, 'WebServer', 'stopped', 'WebServer_stopped', tasks)
    operation_task(ctx, graph, 'Tomcat', 'cloudify.interfaces.lifecycle.stop', 'stop_Tomcat', tasks)
    set_state_task(ctx, graph, 'ApacheLoadBalancer', 'stopping', 'ApacheLoadBalancer_stopping', tasks)
    set_state_task(ctx, graph, 'LoadBalancerServer', 'stopping', 'LoadBalancerServer_stopping', tasks)
    set_state_task(ctx, graph, 'Tomcat', 'deleting', 'Tomcat_deleting', tasks)
    set_state_task(ctx, graph, 'WebServer', 'stopping', 'WebServer_stopping', tasks)
    set_state_task(ctx, graph, 'Java', 'stopped', 'Java_stopped', tasks)
    set_state_task(ctx, graph, 'Java', 'stopping', 'Java_stopping', tasks)
    set_state_task(ctx, graph, 'Tomcat', 'stopped', 'Tomcat_stopped', tasks)
    set_state_task(ctx, graph, 'War', 'deleted', 'War_deleted', tasks)
    set_state_task(ctx, graph, 'WebServer', 'deleting', 'WebServer_deleting', tasks)
    set_state_task(ctx, graph, 'ApacheLoadBalancer', 'deleted', 'ApacheLoadBalancer_deleted', tasks)
    set_state_task(ctx, graph, 'LoadBalancerServer', 'stopped', 'LoadBalancerServer_stopped', tasks)
    set_state_task(ctx, graph, 'Java', 'deleted', 'Java_deleted', tasks)
    set_state_task(ctx, graph, 'War', 'stopped', 'War_stopped', tasks)
    set_state_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'stopping', '_a4c_floating_ip_LoadBalancerServer_stopping', tasks)
    operation_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'cloudify.interfaces.lifecycle.stop', 'stop__a4c_floating_ip_LoadBalancerServer', tasks)
    set_state_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'stopped', '_a4c_floating_ip_LoadBalancerServer_stopped', tasks)
    set_state_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'deleting', '_a4c_floating_ip_LoadBalancerServer_deleting', tasks)
    operation_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'cloudify.interfaces.lifecycle.delete', 'delete__a4c_floating_ip_LoadBalancerServer', tasks)
    set_state_task(ctx, graph, '_a4c_floating_ip_LoadBalancerServer', 'deleted', '_a4c_floating_ip_LoadBalancerServer_deleted', tasks)
    link_tasks(graph, 'LoadBalancerServer_deleting', 'LoadBalancerServer_stopped', tasks)
    link_tasks(graph, 'delete_LoadBalancerServer', 'LoadBalancerServer_deleting', tasks)
    link_tasks(graph, 'Tomcat_deleted', 'Tomcat_deleting', tasks)
    link_tasks(graph, 'WebServer_deleted', 'delete_WebServer', tasks)
    link_tasks(graph, 'War_deleting', 'War_stopped', tasks)
    link_tasks(graph, 'stop_LoadBalancerServer', 'LoadBalancerServer_stopping', tasks)
    link_tasks(graph, 'stop_WebServer', 'WebServer_stopping', tasks)
    link_tasks(graph, 'ApacheLoadBalancer_stopped', 'stop_ApacheLoadBalancer', tasks)
    link_tasks(graph, 'ApacheLoadBalancer_deleting', 'ApacheLoadBalancer_stopped', tasks)
    link_tasks(graph, 'stop_ApacheLoadBalancer', 'ApacheLoadBalancer_stopping', tasks)
    link_tasks(graph, 'Java_deleting', 'Java_stopped', tasks)
    link_tasks(graph, 'Tomcat_stopping', 'War_deleted', tasks)
    link_tasks(graph, 'delete_WebServer', 'WebServer_deleting', tasks)
    link_tasks(graph, 'LoadBalancerServer_deleted', 'delete_LoadBalancerServer', tasks)
    link_tasks(graph, 'WebServer_stopped', 'stop_WebServer', tasks)
    link_tasks(graph, 'stop_Tomcat', 'Tomcat_stopping', tasks)
    link_tasks(graph, 'LoadBalancerServer_stopping', 'ApacheLoadBalancer_deleted', tasks)
    link_tasks(graph, 'Tomcat_deleting', 'Tomcat_stopped', tasks)
    link_tasks(graph, 'WebServer_stopping', 'Tomcat_deleted', tasks)
    link_tasks(graph, 'WebServer_stopping', 'Java_deleted', tasks)
    link_tasks(graph, 'Java_stopped', 'Java_stopping', tasks)
    link_tasks(graph, 'Tomcat_stopped', 'stop_Tomcat', tasks)
    link_tasks(graph, 'War_deleted', 'War_deleting', tasks)
    link_tasks(graph, 'WebServer_deleting', 'WebServer_stopped', tasks)
    link_tasks(graph, 'ApacheLoadBalancer_deleted', 'ApacheLoadBalancer_deleting', tasks)
    link_tasks(graph, 'LoadBalancerServer_stopped', 'stop_LoadBalancerServer', tasks)
    link_tasks(graph, 'Java_deleted', 'Java_deleting', tasks)
    link_tasks(graph, 'War_stopped', 'War_stopping', tasks)
    link_tasks(graph, '_a4c_floating_ip_LoadBalancerServer_stopping', 'LoadBalancerServer_deleted', tasks)
    link_tasks(graph, 'stop__a4c_floating_ip_LoadBalancerServer', '_a4c_floating_ip_LoadBalancerServer_stopping', tasks)
    link_tasks(graph, '_a4c_floating_ip_LoadBalancerServer_stopped', 'stop__a4c_floating_ip_LoadBalancerServer', tasks)
    link_tasks(graph, '_a4c_floating_ip_LoadBalancerServer_deleting', '_a4c_floating_ip_LoadBalancerServer_stopped', tasks)
    link_tasks(graph, 'delete__a4c_floating_ip_LoadBalancerServer', '_a4c_floating_ip_LoadBalancerServer_deleting', tasks)
    link_tasks(graph, '_a4c_floating_ip_LoadBalancerServer_deleted', 'delete__a4c_floating_ip_LoadBalancerServer', tasks)


def build_tasks(ctx, graph):
    tasks = {}
    _build_tasks(ctx, graph, tasks)
    return tasks
