
tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2/plugin.yaml

node_types:

  _a4c_generated_type.openstack.Compute:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      _a4c_native_property:
        default: {}
      _a4c_native_type:
        default: compute

  _a4c_generated_type.openstack.FloatingIP:
    derived_from: cloudify.openstack.nodes.FloatingIP
    properties:
      _a4c_native_type:
        default: floating_ip

  _a4c_generated_type.openstack.Volume:
    derived_from: cloudify.openstack.nodes.Volume
    properties:
      _a4c_native_property:
        default: {}
      _a4c_native_type:
        default: volume

  _a4c_generated_type.openstack.Network:
    derived_from: cloudify.openstack.nodes.Network
    properties:
      _a4c_native_property:
        default: {}
      _a4c_native_type:
        default: network

  _a4c_generated_type.cloudify.nodes.FileSystem:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Enables the use of already formatted volumes.
        type: boolean
        default: false
      partition_type:
        description: >
          The partition type. 83 is a Linux Native Partition.
        type: integer
        default: 83
      fs_type:
        description: >
          The type of the File System.
          Supported types are [ext2, ext3, ext4, fat, ntfs, swap]
        type: string
        default: ext4
      fs_mount_path:
        description: >
          The path of the mount point.
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: _a4c_cfy3_native_artifact/volume/mkfs.sh
  _a4c_generated_type.cloudify.nodes.DeploymentArtifacts:
    derived_from: cloudify.nodes.Root
    properties:
      artifacts:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: _a4c_cfy3_native_artifact/deployment_artifacts/download_artifacts.py
  alien.nodes.Apache:
    derived_from: cloudify.nodes.WebServer
    properties:
      version:
        type: string
        default: "2.4"
      port:
        type: string
        default: "80"
      document_root:
        type: string
        default: "/var/www"
  alien.nodes.Mysql:
    derived_from: cloudify.nodes.Database
    properties:
      db_port:
        type: string
        default: "3306"
      db_name:
        type: string
        default: "wordpress"
      db_user:
        type: string
        default: "pass"
      db_password:
        type: string
        default: "pass"
      bind_address:
        type: string
        default: "true"
      storage_path:
        type: string
        default: "/mountedStorage"
  alien.nodes.Wordpress:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      zip_url:
        type: string
        default: "https://wordpress.org/latest.zip"
      context_path:
        type: string
        default: "/"
  alien.nodes.PHP:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      version:
        type: string
        default: "5"

relationships:
  _a4c_generated_type.cloudify.relationships.file_system_depends_on_volume:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: _a4c_cfy3_native_artifact/volume/fdisk.sh
  _a4c_generated_type.cloudify.relationships.file_system_contained_in_compute:
    derived_from: cloudify.relationships.contained_in
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: _a4c_cfy3_native_artifact/volume/mount.sh
        unlink:
          implementation: _a4c_cfy3_native_artifact/volume/unmount.sh
  alien.relationships.WordpressHostedOnApache:
    derived_from: cloudify.relationships.contained_in
  alien.relationships.WordpressConnectToPHP:
    derived_from: cloudify.relationships.connected_to
  alien.relationships.WordpressConnectToMysql:
    derived_from: cloudify.relationships.connected_to

node_templates:

  DataBase:
    type: _a4c_generated_type.openstack.Compute
    properties:
      _a4c_native_property:
        os_arch: "x86_64"
        os_type: "linux"
      server:
        image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
        flavor: 2
    instances:
      deploy: 1
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.connected_to
      - target: InternalNetwork_subnet
        type: cloudify.relationships.depends_on
  Server:
    type: _a4c_generated_type.openstack.Compute
    properties:
      _a4c_native_property:
        os_arch: "x86_64"
        os_type: "linux"
      server:
        image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
        flavor: 2
    instances:
      deploy: 1
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.connected_to
      - target: InternalNetwork_subnet
        type: cloudify.relationships.depends_on
      - target: _a4c_generated_node_floating_ip_Server
        type: cloudify.openstack.server_connected_to_floating_ip
  _a4c_generated_node_floating_ip_Server:
    type: _a4c_generated_type.openstack.FloatingIP
    properties:
      floatingip:
        floating_network_name: net-pub

  InternalNetwork:
    type: _a4c_generated_type.openstack.Network
    properties:
      resource_id: internal-network
      _a4c_native_property:
        network_name: "internal-network"
  InternalNetwork_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: internal-network_subnet
      subnet:
        ip_version: 4
        cidr: 192.168.1.0/24
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.contained_in

  _a4c_generated_node_file_system_DataBaseStorage:
    type: _a4c_generated_type.cloudify.nodes.FileSystem
    properties:
      fs_type: ext4
      fs_mount_path: /var/mysql
    relationships:
      - type: _a4c_generated_type.cloudify.relationships.file_system_depends_on_volume
        target: DataBaseStorage
      - type: _a4c_generated_type.cloudify.relationships.file_system_contained_in_compute
        target: DataBase
  DataBaseStorage:
    type: _a4c_generated_type.openstack.Volume
    properties:
      _a4c_native_property:
        file_system: "ext4"
        location: "/var/mysql"
      device_name: /dev/vdb
      volume:
        size: 1
    relationships:
      - target: DataBase
        type: cloudify.openstack.volume_attached_to_server

  _a4c_generated_node_artifacts_for_Mysql:
    type: _a4c_generated_type.cloudify.nodes.DeploymentArtifacts
    properties:
      artifacts:
        configs:
          - relative_path: mysqld_charset.cnf
            absolute_path: mysql-type/configs/mysqld_charset.cnf
    relationships:
      - type: cloudify.relationships.contained_in
        target: DataBase


  Apache:
    type: alien.nodes.Apache
    instances:
      deploy: 1
    properties:
      port: "80"
      document_root: "/var/www"
      version: "2.4"
    interfaces:
      cloudify.interfaces.lifecycle:
        start: apache-type/scripts/start_apache.sh
        create:
          implementation: apache-type/scripts/install_apache.sh
          inputs:
            process:
              env:
                PORT: { get_property: [Apache, port] }
                DOC_ROOT: { get_property: [Apache, document_root] }
    relationships:
      - target: Server
        type: cloudify.relationships.contained_in
  PHP:
    type: alien.nodes.PHP
    instances:
      deploy: 1
    properties:
      version: "5"
    interfaces:
      cloudify.interfaces.lifecycle:
        create: php-type/scripts/install_php.sh
    relationships:
      - target: Server
        type: cloudify.relationships.contained_in
  Wordpress:
    type: alien.nodes.Wordpress
    instances:
      deploy: 1
    properties:
      context_path: "/"
      zip_url: "https://wordpress.org/latest.zip"
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: wordpress-type/scripts/install_wordpress.sh
          inputs:
            process:
              env:
                WEBFILE_URL: { get_property: [Wordpress, zip_url] }
    relationships:
      - target: Apache
        type: alien.relationships.WordpressHostedOnApache
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: wordpress-type/scripts/config_wordpress.sh
              inputs:
                process:
                  env:
                    CONTEXT_PATH: { get_property: [Wordpress, context_path] }
                    DOC_ROOT: { get_property: [Apache, document_root] }
      - target: Mysql
        type: alien.relationships.WordpressConnectToMysql
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: wordpress-type/scripts/config_wordpress_for_mysql.sh
              inputs:
                process:
                  env:
                    DB_IP: { get_attribute: [DataBase, ip] }
                    DB_PORT: { get_property: [Mysql, db_port] }
                    DB_NAME: { get_property: [Mysql, db_name] }
                    DB_USER: { get_property: [Mysql, db_user] }
                    DB_PASSWORD: { get_property: [Mysql, db_password] }
      - target: PHP
        type: alien.relationships.WordpressConnectToPHP
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wordpress-type/scripts/install_php_module.sh
  Mysql:
    type: alien.nodes.Mysql
    instances:
      deploy: 1
    properties:
      bind_address: "true"
      storage_path: "/mountedStorage"
      db_port: "3306"
      db_name: "wordpress"
      db_user: "pass"
      db_password: "pass"
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: mysql-type/scripts/start_mysql.sh
          inputs:
            process:
              env:
                VOLUME_HOME: { get_property: [Mysql, storage_path] }
                PORT: { get_property: [Mysql, db_port] }
                DB_NAME: { get_property: [Mysql, db_name] }
                DB_USER: { get_property: [Mysql, db_user] }
                DB_PASSWORD: { get_property: [Mysql, db_password] }
                BIND_ADRESS: { get_property: [Mysql, bind_address] }
                configs: { get_attribute: [_a4c_generated_node_artifacts_for_Mysql, configs] }
        create:
          implementation: mysql-type/scripts/install_mysql.sh
          inputs:
            process:
              env:
                configs: { get_attribute: [_a4c_generated_node_artifacts_for_Mysql, configs] }
    relationships:
      - target: _a4c_generated_node_file_system_DataBaseStorage
        type: cloudify.relationships.depends_on
      - target: _a4c_generated_node_artifacts_for_Mysql
        type: cloudify.relationships.depends_on
      - target: DataBase
        type: cloudify.relationships.contained_in
