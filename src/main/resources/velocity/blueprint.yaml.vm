#*
This template is used to generate cloudify 3 recipe from alien model
- $mapping --> contains specific IaaS mapping loaded from src/main/resources/mapping/$provider.yaml
- $cloud --> contains alien4cloud.paas.cloudify3.configuration.CloudConfiguration instance
- $deployment --> contains Alien's deployment and types
- $provider_types --> template file for specific provider types
*#
tosca_definitions_version: $mapping.dslVersion

imports:
#foreach($import in $mapping.imports)
  - $import
#end

#parse("$provider_types_file")

node_templates:
#foreach($compute in $deployment.computes)
  $compute.paaSNodeTemplate.id:
    type: ${mapping.generatedTypePrefix}.computes.$compute.computeTemplateId
    instances:
      deploy: 1
#end
## TODO Volume
## TODO Network
#foreach($nonNativeNode in $deployment.nonNatives)
  $nonNativeNode.id:
    type: $nonNativeNode.indexedNodeType.elementId
    instances:
      deploy: 1
#if($util.mapHasEntries($nodeTemplate.properties))
    properties:
#foreach($property in $nonNativeNode.nodeTemplate.properties.entrySet())
      $property.getKey(): $property.getValue()
#end
#end
#set( $relationshipTemplates = $util.getSourceRelationships($nonNativeNode) )
#if($util.collectionHasElement($relationshipTemplates))
    relationships:
#foreach($relationship in $relationshipTemplates)
      - target: $relationship.relationshipTemplate.target
        type: $util.tryToMapToCloudifyType($relationship.indexedRelationshipType.elementId)
#end
#end
#end
