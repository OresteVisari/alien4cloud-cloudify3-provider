#include("../artifacts/non_native/script_wrapper_static.py")


class OutputConsumer(object):
    def __init__(self, out):
        self.out = out
        self.buffer = StringIO()
        self.consumer = threading.Thread(target=self.consume_output)
        self.consumer.daemon = True
        self.consumer.start()

    def consume_output(self):
        for line in iter(self.out.readline, b''):
            self.buffer.write(line)
        self.out.close()

    def join(self):
        self.consumer.join()


ctx.logger.info('Just logging the web app host IP: _____{0}_____'.format(get_attribute(ctx.source, 'ip')))

ctx.logger.info('Just logging the web app test property: _____{0}_____'.format(get_property(ctx.source, 'a_simple_test')))

new_script_process = {
    "env": {
        "WEB_APP_HOST_IP": get_attribute(ctx.source, 'ip'),
        "WEB_APP_HOST_TEST_PROPERTY": get_property(ctx.source, 'a_simple_test')
    }
}

execute(ctx.download_resource("test.sh"), new_script_process)
